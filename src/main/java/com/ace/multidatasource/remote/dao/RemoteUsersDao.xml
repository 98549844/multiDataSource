<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ace.multidatasource.remote.dao.RemoteUsersDao">

    <resultMap type="com.ace.multidatasource.remote.entity.RemoteUsers" id="RemoteUsersMap">
        <result property="userId" column="userId" jdbcType="INTEGER"/>
        <result property="createdBy" column="createdBy" jdbcType="INTEGER"/>
        <result property="createdDate" column="createdDate" jdbcType="VARCHAR"/>
        <result property="lastUpdateDate" column="lastUpdateDate" jdbcType="VARCHAR"/>
        <result property="lastUpdatedBy" column="lastUpdatedBy" jdbcType="INTEGER"/>
        <result property="version" column="version" jdbcType="INTEGER"/>
        <result property="age" column="age" jdbcType="INTEGER"/>
        <result property="birthday" column="birthday" jdbcType="VARCHAR"/>
        <result property="description" column="description" jdbcType="VARCHAR"/>
        <result property="domain" column="domain" jdbcType="VARCHAR"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="enabled" column="enabled" jdbcType="INTEGER"/>
        <result property="expireDate" column="expireDate" jdbcType="VARCHAR"/>
        <result property="gender" column="gender" jdbcType="VARCHAR"/>
        <result property="hostname" column="hostName" jdbcType="VARCHAR"/>
        <result property="ip" column="ip" jdbcType="VARCHAR"/>
        <result property="loginDateTime" column="loginDateTime" jdbcType="VARCHAR"/>
        <result property="mobile" column="mobile" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="remark" column="remark" jdbcType="VARCHAR"/>
        <result property="status" column="status" jdbcType="VARCHAR"/>
        <result property="userAccount" column="userAccount" jdbcType="VARCHAR"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="RemoteUsersMap">
        select userId,
               createdBy,
               createdDate,
               lastUpdateDate,
               lastUpdatedBy,
               version,
               age,
               birthday,
               description,
               domain,
               email,
               enabled,
               expireDate,
               gender,
               hostName,
               ip,
               loginDateTime,
               mobile,
               password,
               remark,
               status,
               userAccount,
               username
        from users
        where userId = #{userId}
    </select>

    <!--查询所有-->
    <select id="queryAll" resultMap="RemoteUsersMap">
        select userId,
               createdBy,
               createdDate,
               lastUpdateDate,
               lastUpdatedBy,
               version,
               age,
               birthday,
               description,
            domain,
            email,
            enabled,
            expireDate,
            gender,
            hostName,
            ip,
            loginDateTime,
            mobile,
            password,
            remark,
            status,
            userAccount,
            username
        from users
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="RemoteUsersMap">
        select
        userId, createdBy, createdDate, lastUpdateDate, lastUpdatedBy, version, age, birthday, description, domain,
        email, enabled, expireDate, gender, hostName, ip, loginDateTime, mobile, password, remark, status, userAccount,
        username
        from users
        <where>
            <if test="userId != null">
                and userId = #{userId}
            </if>
            <if test="createdBy != null">
                and createdBy = #{createdBy}
            </if>
            <if test="createdDate != null and createdDate != ''">
                and createdDate = #{createdDate}
            </if>
            <if test="lastUpdateDate != null and lastUpdateDate != ''">
                and lastUpdateDate = #{lastUpdateDate}
            </if>
            <if test="lastUpdatedBy != null">
                and lastUpdatedBy = #{lastUpdatedBy}
            </if>
            <if test="version != null">
                and version = #{version}
            </if>
            <if test="age != null">
                and age = #{age}
            </if>
            <if test="birthday != null and birthday != ''">
                and birthday = #{birthday}
            </if>
            <if test="description != null and description != ''">
                and description = #{description}
            </if>
            <if test="domain != null and domain != ''">
                and domain = #{domain}
            </if>
            <if test="email != null and email != ''">
                and email = #{email}
            </if>
            <if test="enabled != null">
                and enabled = #{enabled}
            </if>
            <if test="expireDate != null and expireDate != ''">
                and expireDate = #{expireDate}
            </if>
            <if test="gender != null and gender != ''">
                and gender = #{gender}
            </if>
            <if test="hostname != null and hostname != ''">
                and hostName = #{hostname}
            </if>
            <if test="ip != null and ip != ''">
                and ip = #{ip}
            </if>
            <if test="loginDateTime != null and loginDateTime != ''">
                and loginDateTime = #{loginDateTime}
            </if>
            <if test="mobile != null and mobile != ''">
                and mobile = #{mobile}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
            <if test="remark != null and remark != ''">
                and remark = #{remark}
            </if>
            <if test="status != null and status != ''">
                and status = #{status}
            </if>
            <if test="userAccount != null and userAccount != ''">
                and userAccount = #{userAccount}
            </if>
            <if test="username != null and username != ''">
                and username = #{username}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from users
        <where>
            <if test="userId != null">
                and userId = #{userId}
            </if>
            <if test="createdBy != null">
                and createdBy = #{createdBy}
            </if>
            <if test="createdDate != null and createdDate != ''">
                and createdDate = #{createdDate}
            </if>
            <if test="lastUpdateDate != null and lastUpdateDate != ''">
                and lastUpdateDate = #{lastUpdateDate}
            </if>
            <if test="lastUpdatedBy != null">
                and lastUpdatedBy = #{lastUpdatedBy}
            </if>
            <if test="version != null">
                and version = #{version}
            </if>
            <if test="age != null">
                and age = #{age}
            </if>
            <if test="birthday != null and birthday != ''">
                and birthday = #{birthday}
            </if>
            <if test="description != null and description != ''">
                and description = #{description}
            </if>
            <if test="domain != null and domain != ''">
                and domain = #{domain}
            </if>
            <if test="email != null and email != ''">
                and email = #{email}
            </if>
            <if test="enabled != null">
                and enabled = #{enabled}
            </if>
            <if test="expireDate != null and expireDate != ''">
                and expireDate = #{expireDate}
            </if>
            <if test="gender != null and gender != ''">
                and gender = #{gender}
            </if>
            <if test="hostname != null and hostname != ''">
                and hostName = #{hostname}
            </if>
            <if test="ip != null and ip != ''">
                and ip = #{ip}
            </if>
            <if test="loginDateTime != null and loginDateTime != ''">
                and loginDateTime = #{loginDateTime}
            </if>
            <if test="mobile != null and mobile != ''">
                and mobile = #{mobile}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
            <if test="remark != null and remark != ''">
                and remark = #{remark}
            </if>
            <if test="status != null and status != ''">
                and status = #{status}
            </if>
            <if test="userAccount != null and userAccount != ''">
                and userAccount = #{userAccount}
            </if>
            <if test="username != null and username != ''">
                and username = #{username}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="userId" useGeneratedKeys="true">
        insert into users(createdBy, createdDate, lastUpdateDate, lastUpdatedBy, version, age, birthday,
                                 description, domain, email, enabled, expireDate, gender, hostName, ip, loginDateTime,
                                 mobile, password, remark, status, userAccount, username)
        values (#{createdBy}, #{createdDate}, #{lastUpdateDate}, #{lastUpdatedBy}, #{version}, #{age}, #{birthday},
                #{description}, #{domain}, #{email}, #{enabled}, #{expireDate}, #{gender}, #{hostname}, #{ip},
                #{loginDateTime}, #{mobile}, #{password}, #{remark}, #{status}, #{userAccount}, #{username})
    </insert>

    <insert id="insertBatch" keyProperty="userId" useGeneratedKeys="true">
        insert into users(createdBy, createdDate, lastUpdateDate, lastUpdatedBy, version, age, birthday,
        description, domain, email, enabled, expireDate, gender, hostName, ip, loginDateTime, mobile, password, remark,
        status, userAccount, username)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.createdBy}, #{entity.createdDate}, #{entity.lastUpdateDate}, #{entity.lastUpdatedBy},
            #{entity.version}, #{entity.age}, #{entity.birthday}, #{entity.description}, #{entity.domain},
            #{entity.email}, #{entity.enabled}, #{entity.expireDate}, #{entity.gender}, #{entity.hostname},
            #{entity.ip}, #{entity.loginDateTime}, #{entity.mobile}, #{entity.password}, #{entity.remark},
            #{entity.status}, #{entity.userAccount}, #{entity.username})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="userId" useGeneratedKeys="true">
        insert into users(createdBy, createdDate, lastUpdateDate, lastUpdatedBy, version, age, birthday,
        description, domain, email, enabled, expireDate, gender, hostName, ip, loginDateTime, mobile, password, remark,
        status, userAccount, username)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.createdBy}, #{entity.createdDate}, #{entity.lastUpdateDate}, #{entity.lastUpdatedBy},
            #{entity.version}, #{entity.age}, #{entity.birthday}, #{entity.description}, #{entity.domain},
            #{entity.email}, #{entity.enabled}, #{entity.expireDate}, #{entity.gender}, #{entity.hostname},
            #{entity.ip}, #{entity.loginDateTime}, #{entity.mobile}, #{entity.password}, #{entity.remark},
            #{entity.status}, #{entity.userAccount}, #{entity.username})
        </foreach>
        on duplicate key update
        createdBy = values(createdBy),
        createdDate = values(createdDate),
        lastUpdateDate = values(lastUpdateDate),
        lastUpdatedBy = values(lastUpdatedBy),
        version = values(version),
        age = values(age),
        birthday = values(birthday),
        description = values(description),
        domain = values(domain),
        email = values(email),
        enabled = values(enabled),
        expireDate = values(expireDate),
        gender = values(gender),
        hostName = values(hostName),
        ip = values(ip),
        loginDateTime = values(loginDateTime),
        mobile = values(mobile),
        password = values(password),
        remark = values(remark),
        status = values(status),
        userAccount = values(userAccount),
        username = values(username)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update users
        <set>
            <if test="createdBy != null">
                createdBy = #{createdBy},
            </if>
            <if test="createdDate != null and createdDate != ''">
                createdDate = #{createdDate},
            </if>
            <if test="lastUpdateDate != null and lastUpdateDate != ''">
                lastUpdateDate = #{lastUpdateDate},
            </if>
            <if test="lastUpdatedBy != null">
                lastUpdatedBy = #{lastUpdatedBy},
            </if>
            <if test="version != null">
                version = #{version},
            </if>
            <if test="age != null">
                age = #{age},
            </if>
            <if test="birthday != null and birthday != ''">
                birthday = #{birthday},
            </if>
            <if test="description != null and description != ''">
                description = #{description},
            </if>
            <if test="domain != null and domain != ''">
                domain = #{domain},
            </if>
            <if test="email != null and email != ''">
                email = #{email},
            </if>
            <if test="enabled != null">
                enabled = #{enabled},
            </if>
            <if test="expireDate != null and expireDate != ''">
                expireDate = #{expireDate},
            </if>
            <if test="gender != null and gender != ''">
                gender = #{gender},
            </if>
            <if test="hostname != null and hostname != ''">
                hostName = #{hostname},
            </if>
            <if test="ip != null and ip != ''">
                ip = #{ip},
            </if>
            <if test="loginDateTime != null and loginDateTime != ''">
                loginDateTime = #{loginDateTime},
            </if>
            <if test="mobile != null and mobile != ''">
                mobile = #{mobile},
            </if>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            <if test="remark != null and remark != ''">
                remark = #{remark},
            </if>
            <if test="status != null and status != ''">
                status = #{status},
            </if>
            <if test="userAccount != null and userAccount != ''">
                userAccount = #{userAccount},
            </if>
            <if test="username != null and username != ''">
                username = #{username},
            </if>
        </set>
        where userId = #{userId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from users
        where userId = #{userId}
    </delete>

</mapper>

